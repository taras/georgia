version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:10

commands:
  yarn:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

jobs:
  test:
    executor: node
    steps:
      - checkout
      - yarn
      - run: yarn test

  lint:
    executor: node
    steps:
      - checkout
      - yarn
      - run: yarn lint

  coverage:
    executor: node
    steps:
      - checkout
      - yarn
      - run: yarn coverage
      - run: yarn coveralls

  deploy-master:
    executor: node
    steps:
      - checkout
      - yarn
      - run:
          name: Authenticate with Registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Install Hub
          command: |
            wget https://github.com/github/hub/releases/download/v2.12.3/hub-linux-amd64-2.12.3.tgz
            tar -zxvf hub-linux-amd64-2.12.3.tgz
            cd hub-linux-amd64-2.12.3
            sudo ./install
      - add_ssh_keys:
          fingerprints:
            - $FINGERPRINT
      - run:
          name: Increment and Publish
          command: |
            labels=$(hub pr list -s merged -L 1 -f %L)
            major=false
            minor=false
            for i in $(echo $labels | sed "s/,/ /g")
            do
              if [ "$i" = "major" ]
              then
                major=true
              elif [ "$i" = "minor" ]
              then
                minor=true
              fi
            done
            if [ $major = true ]
            then
              result=major
            elif [ $major = false -a $minor = true ]
            then
              result=minor
            elif [ $major = false -a $minor = false ]
            then
              result=patch
            fi
            npm version $result --no-git-tag-version --force
            git add package.json
            if [ "${#SEMVER_USER_NAME}"==0 ]
            then
              git_config_name=undefined
            else
              git_config_name=$SEMVER_USER_NAME
            fi
            if [ "${#SEMVER_USER_EMAIL}"==0 ]
            then
              git_config_email=undefined
            else
              git_config_email=$SEMVER_USER_EMAIL
            fi
            git config user.email $git_config_email
            git config user.name $git_config_name
            current="`node -e \"console.log(require('./package.json').version)\"`"
            git commit -m "Release version $current [ci skip]"
            git push origin master
            npm publish

  deploy-pr:
    executor: node
    steps:
      - checkout
      - yarn
      - run:
          name: Authenticate with Registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Generate beta version for package.json
          command: |
            commit=$(git rev-parse --short HEAD)
            current="`node -e \"console.log(require('./package.json').version)\"`"
            beta=$current-$commit
            npm version $beta --no-git-tag-version
      - run:
          name: Publish package
          command: npm publish
      - run:
          name: Danger Bot
          command: |
            cd .circleci
            yarn global add danger --dev 
            export PATH="$(yarn global bin):$PATH"
            danger ci

workflows:
  version: 2.1
  build-deploy-master:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
      - lint:
          requires:
            - test
      - coverage:
          requires:
            - lint
      - deploy-master:
          requires:
            - coverage
  build-deploy-pr:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - master
      - lint:
          requires:
            - test
      - coverage:
          requires:
            - lint
      - deploy-pr:
          requires:
            - coverage